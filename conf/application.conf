# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName = apprenticeship-levy
appUrl = "http://"${appName}""

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "U/Z?1c^ov^@iK_n9CxSNsr8FBnEI=EXe/7RFTy?ONLz<>?YP/YR5S=2IQoT2Fo/>"

# Session configuration
# ~~~~~
application.session.httpOnly = true

application.session.secure = true

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = uk.gov.hmrc.apprenticeshiplevy.config.MicroserviceGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes
http.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 50

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.live.LiveLevyDeclarationController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = true
    authParams = {
      privilegedAccess = "read:apprenticeship-levy"
    }
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.live.LiveRootController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = true
    authParams = {
      privilegedAccess = "read:apprenticeship-levy"
    }
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.live.LiveEmprefController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = true
    authParams = {
      privilegedAccess = "read:apprenticeship-levy"
    }
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.live.LiveFractionsController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = true
    authParams = {
      privilegedAccess = "read:apprenticeship-levy"
    }
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.live.LiveFractionsCalculationDateController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = true
    authParams = {
      privilegedAccess = "read:apprenticeship-levy"
    }
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.live.LiveEmploymentCheckController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = true
    authParams = {
      privilegedAccess = "read:apprenticeship-levy"
    }
  }

  controllers.Assets = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.DocumentationController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  # sandboxes
  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.SandboxRootController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.SandboxEmprefController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.SandboxLevyDeclarationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.SandboxFractionsController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.SandboxEmploymentCheckController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.SandboxFractionsCalculationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.apprenticeshiplevy.controllers.sandbox.data.SandboxTestDataController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

}

# Metrics plugin settings - graphite reporting is configured on a per env basis
play.modules.enabled+="com.kenshoo.play.metrics.PlayModule"
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}


# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}


microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  private-mode = true
  whitelisted-applications = ""
  defaultNumberOfDeclarationYears = "6"
  dateRegex = "^(\\d{4})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
 # considering making empref regex looser to support older references
  emprefRegex = "^\\d{3}/[0-9A-Z]{1,10}$"
  ninoRegex = "^(AA|AB|AE|AH|AK|AL|AM|AP|AR|AS|AT|AW|AX|AY|AZ|BA|BB|BE|BH|BK|BL|BM|BT|CA|CB|CE|CH|CK|CL|CR|EA|EB|EE|EH|EK|EL|EM|EP|ER|ES|ET|EW|EX|EY|EZ|GY|HA|HB|HE|HH|HK|HL|HM|HP|HR|HS|HT|HW|HX|HY|HZ|JA|JB|JC|JE|JG|JH|JJ|JK|JL|JM|JN|JP|JR|JS|JT|JW|JX|JY|JZ|KA|KB|KC|KE|KH|KK|KL|KM|KP|KR|KS|KT|KW|KX|KY|KZ|LA|LB|LE|LH|LK|LL|LM|LP|LR|LS|LT|LW|LX|LY|LZ|MA|MW|MX|NA|NB|NE|NH|NL|NM|NP|NR|NS|NW|NX|NY|NZ|OA|OB|OE|OH|OK|OL|OM|OP|OR|OS|OX|PA|PB|PC|PE|PG|PH|PJ|PK|PL|PM|PN|PP|PR|PS|PT|PW|PX|PY|RA|RB|RE|RH|RK|RM|RP|RR|RS|RT|RW|RX|RY|RZ|SA|SB|SC|SE|SG|SH|SJ|SK|SL|SM|SN|SP|SR|SS|ST|SW|SX|SY|SZ|TA|TB|TE|TH|TK|TL|TM|TP|TR|TS|TT|TW|TX|TY|TZ|WA|WB|WE|WK|WL|WM|WP|YA|YB|YE|YH|YK|YL|YM|YP|YR|YS|YT|YW|YX|YY|YZ|ZA|ZB|ZE|ZH|ZK|ZL|ZM|ZP|ZR|ZS|ZT|ZW|ZX|ZY)[0-9]{6}[A-D]?$"

  services {
    auth {
      host = localhost
      port = 9470
      path = /sandbox/data
    }

    service-locator {
      host = service-locator.protected.mdtp
      port = 80
      enabled = false
    }

    des {
      host = localhost
      port = 9470
      path = /sandbox/data
      env = ist0
      token = ABC
    }

    stub-des {
      host = localhost
      port = 9470
      path = /sandbox/data
      env = clone
      token = ABC
    }

    stub-auth {
      host = localhost
      port = 9470
      path = /sandbox/data
    }
  }
}
